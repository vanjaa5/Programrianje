using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplication58
{
    class Program
    {

        struct tacka {
            public int x;
            public int y;
            public tacka(int x, int y) {
                this.x = x;
                this.y = y;
            }

        }
        struct vektor
        {
            public int x;
            public int y;
            public int z;
            public vektor(int x, int y,int z)
            {
                this.x = x;
                this.y = y;
                this.z = z;
            }

        }

        enum Orijentacija { POZITIVNA, KOLINEARNA, NEGATIVNA }
      
        static Orijentacija orijentacija(tacka a, tacka b,tacka t) {
            int x1 = t.x - a.x;
            int y1 = t.y - a.y;
            int x2 = t.x - b.x;
            int y2 = t.y - b.y;

            vektor pom = vektorski(x1, y1, 0, x2, y2, 0);

            int n = pom.x - pom.y + pom.z;

            if (n > 0) return Orijentacija.POZITIVNA;
            else if (n == 0) return Orijentacija.KOLINEARNA;
            else return Orijentacija.NEGATIVNA;
        }
static vektor vektorski(int x1, int y1, int z1, int x2, int y2, int z2) {

            int x = y1 * z2 - y2 * z1;
            int y = z1 * x2 - x1 * z2;
            int z = x1 * y2 - x2 * y1;
            return new vektor(x, y, z);
        
        }

         

        static void Main(string[] args)
        {
            int x = int.Parse(Console.ReadLine());
            int y = int.Parse(Console.ReadLine());
        
            tacka a= new tacka(x,y);
            x=int.Parse(Console.ReadLine());
            y=int.Parse(Console.ReadLine());
            tacka b = new tacka(x, y);

            x = int.Parse(Console.ReadLine());
            y = int.Parse(Console.ReadLine());
            tacka t = new tacka(x, y);

            Orijentacija abt = orijentacija(a, b, t);

            int n = int.Parse(Console.ReadLine());
            int br = 0;
            for (int i = 0; i < n; i++) {
                x = int.Parse(Console.ReadLine());
                y = int.Parse(Console.ReadLine());
                if(abt == orijentacija(a, b, new tacka(x, y)))br++;
            }


            Console.WriteLine(br);
            Console.ReadKey();
        }
    }
}
